# HG changeset patch
# User Ting-Yu Chou <janus926@gmail.com>
# Date 1401764370 -28800
#      Tue Jun 03 10:59:30 2014 +0800
# Node ID a09912abcdcffaae25da621cd468128a3c013f1e
# Parent  1ea43b2461b3355f500d8dfe6159769c62b76371
Bug 1007520 - Part 3: Avoid leaking SpecialPowers to nsInProcessTabChildGlobal.mMessageManager.

diff --git a/testing/specialpowers/content/specialpowers.js b/testing/specialpowers/content/specialpowers.js
--- a/testing/specialpowers/content/specialpowers.js
+++ b/testing/specialpowers/content/specialpowers.js
@@ -2,30 +2,47 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 /* This code is loaded in every child process that is started by mochitest in
  * order to be used as a replacement for UniversalXPConnect
  */
 
 function SpecialPowers(window) {
   this.window = Components.utils.getWeakReference(window);
+  this._windowID = window.QueryInterface(Components.interfaces.nsIInterfaceRequestor)
+                         .getInterface(Components.interfaces.nsIDOMWindowUtils)
+                         .currentInnerWindowID;
   this._encounteredCrashDumpFiles = [];
   this._unexpectedCrashDumpFiles = { };
   this._crashDumpDir = null;
   this.DOMWindowUtils = bindDOMWindowUtils(window);
   Object.defineProperty(this, 'Components', {
       configurable: true, enumerable: true, get: function() {
           var win = this.window.get();
           if (!win)
               return null;
           return getRawComponents(win);
       }});
   this._pongHandlers = [];
   this._messageListener = this._messageReceived.bind(this);
   addMessageListener("SPPingService", this._messageListener);
+  let (self = this) {
+    Services.obs.addObserver(function onInnerWindowDestroyed(subject, topic, data) {
+      var id = subject.QueryInterface(Components.interfaces.nsISupportsPRUint64).data;
+      if (self._windowID === id) {
+        Services.obs.removeObserver(onInnerWindowDestroyed, "inner-window-destroyed");
+        // The message manager may have been destroyed.
+        try {
+          removeMessageListener("SPPingService", self._messageListener);
+        } catch (e if e.result == Components.results.NS_ERROR_ILLEGAL_VALUE) {
+          ;
+        }
+      }
+    }, "inner-window-destroyed", false);
+  }
 }
 
 SpecialPowers.prototype = new SpecialPowersAPI();
 
 SpecialPowers.prototype.toString = function() { return "[SpecialPowers]"; };
 SpecialPowers.prototype.sanityCheck = function() { return "foo"; };
 
 // This gets filled in in the constructor.
